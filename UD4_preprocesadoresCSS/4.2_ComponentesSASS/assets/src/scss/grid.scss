////
/// Ejercicio grid.scss
/// @author Alvaro Membrillo
/// @since 1.0
////

$grid-width: 100rem;
$vertical: 4rem;
$horizontal: 4rem;

$col: 0;
$of: 0;

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
	font-size: 10pt;
}

.row {
	max-width: $grid-width;
	margin: 0 auto;
	&:not(:last-child) {
		margin-bottom: $vertical;
	}

	&::after {
		content: "";
		display: table;
		clear: both;
	}

	[class^="col-"] {
		float: left;
		background-color: orange;
		padding: 1rem;
		&:not(:last-child) {
			margin-right: $horizontal;
		}
	}

	/// función mixin para calcular el tamaño de cada elemento segun sus características
	/// @param {Number} $col primer valor, el ancho con respecto al total
	/// @param {Number} $col segundo valor, el ancho total de la fila
	@mixin generarSize($col, $of) {
		.col-#{$col}-of-#{$of} {
			@if ($col == 1) {
				width: calc((100% - (#{$of} - 1) * #{$horizontal}) / #{$of});
			} @else if($col == 2) {
				width: calc(
					#{$col} *
						((100% - (#{$of} - #{$col} + 1) * #{$horizontal}) / #{$of}) +
						(#{$col} - 1) *
						#{$horizontal}
				);
			} @else if ($col > 2) {
				width: calc(
					#{$col} *
						((100% - (#{$of} - #{$col} + 2) * #{$horizontal}) / #{$of}) +
						(#{$col} - 1) *
						#{$horizontal}
				);
			}
		}
	}

	/// llamamos a la función varias veces para generar todas las reglas css necesarias
	@include generarSize(1, 2);
	@include generarSize(1, 3);
	@include generarSize(2, 3);
	@include generarSize(1, 4);
	@include generarSize(2, 4);
	@include generarSize(3, 4);
}
